name: Deploy Documentation to Production

on:
  # Only manual trigger - no automatic triggers
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - preview

jobs:
  check-unauthorized:
    runs-on: ubuntu-latest
    if: github.actor != 'jacksongrove'
    steps:
      - name: Unauthorized deployment attempt
        run: |
          echo "‚ùå UNAUTHORIZED: Only the repository owner can deploy to production"
          echo "üë§ User: ${{ github.actor }}"
          echo "üìã Branch: ${{ github.ref }}"
          echo ""
          echo "üí° If you're contributing to this project:"
          echo "   - Submit a pull request instead"
          echo "   - Documentation validation happens automatically on PRs"
          echo "   - Production deployments are restricted to the maintainer"
          exit 1

  deploy-to-production:
    runs-on: ubuntu-latest
    environment: production
    # Only allow deployment from main branch by repo owner
    if: github.ref == 'refs/heads/main' && github.actor == 'jacksongrove'
    defaults:
      run:
        working-directory: docs
    steps:
      - uses: actions/checkout@v4
      
      - name: Check authorization
        run: |
          echo "üîí Production deployment authorized for: ${{ github.actor }}"
          echo "üìã Branch: ${{ github.ref }}"
          echo "üéØ Environment: ${{ github.event.inputs.environment }}"
          echo "üöÄ Deploying to: impossibly.dev/docs"
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx sphinx_copybutton sphinx_rtd_theme impossibly
          
      - name: Build documentation
        run: |
          export LC_ALL=C.UTF-8
          export LANG=C.UTF-8
          python -m sphinx -b html source build/html
          
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Deploy to Vercel
        run: |
          if [ "${{ github.event.inputs.environment }}" = "production" ]; then
            vercel --token=${{ secrets.VERCEL_TOKEN }} --prod --yes
          else
            vercel --token=${{ secrets.VERCEL_TOKEN }} --yes
          fi
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          
      - name: Production Deployment Summary
        run: |
          echo "üöÄ PRODUCTION Deployment completed successfully!"
          echo ""
          echo "üìä Deployment Details:"
          echo "  ‚Ä¢ Environment: ${{ github.event.inputs.environment }}"
          echo "  ‚Ä¢ Branch: ${{ github.ref }}"
          echo "  ‚Ä¢ Deployed by: ${{ github.actor }}"
          echo "  ‚Ä¢ Timestamp: $(date)"
          echo ""
          echo "üåç Live URLs:"
          echo "  ‚Ä¢ Production: https://impossibly.dev/docs"
          echo "  ‚Ä¢ Direct Vercel: Check Vercel dashboard"
          echo ""
          echo "üìã Workflow Summary:"
          echo "  ‚Ä¢ VALIDATION: Runs on all PRs and merges (free)"
          echo "  ‚Ä¢ PRODUCTION: Manual deployment only (this workflow)"
          echo ""
          echo "‚öôÔ∏è  Next Steps:"
          echo "  ‚Ä¢ Verify deployment at https://impossibly.dev/docs"
          echo "  ‚Ä¢ Update main site routing if needed" 